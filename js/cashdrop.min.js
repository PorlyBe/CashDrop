"use strict"; const xhr = new XMLHttpRequest, socket = io("https://cashexplorer.bitcoin.com/"), canvas = document.getElementById("renderCanvas"), engine = new BABYLON.Engine(canvas, !0), bccStatus = document.getElementById("status"), txInfo = document.getElementById("txInfo"), bccLogo = document.getElementById("bccLogo"), soundMute = document.getElementById("soundMute"), coinColor = document.getElementById("coinColor"), disableSD = document.getElementById("disableSD"), txRef = document.getElementById("txRef"); let shadows = [], coinMaterial, coinDonationMaterial, coinSDMaterial, groundMaterial, sideMaterial, blockMaterial, edgeMaterial, coinParent, ground, lastPicked, infoPlane, infoTexture, infoText, infoRect, highlight, soundDrop, soundDonation, soundWoosh, soundSD; socket.on("connect", function () { socket.emit("subscribe", "inv") }), socket.on("tx", function (b) { xhr.open("GET", "https://cashexplorer.bitcoin.com/api/tx/" + b.txid, !0), xhr.send(), xhr.onreadystatechange = function () { if (4 == this.readyState && 200 == this.status) { let g = JSON.parse(this.responseText); createTransaction(b.valueOut, b.txid, b.vout, g.size) } } }), socket.on("block", function (b) { xhr.open("GET", "https://cashexplorer.bitcoin.com/api/block/" + b, !0), xhr.send(), xhr.onreadystatechange = function () { if (4 == this.readyState && 200 == this.status) { let g = JSON.parse(this.responseText); createBlock(g.tx), updateStatusText() } } }); var createScene = function () { var b = new BABYLON.Scene(engine), g = BABYLON.Mesh.CreateBox("skyBox", 100, b), j = new BABYLON.StandardMaterial("skyBoxMaterial", b); g.position.y = -10, g.renderingGroupId = 0, g.infiniteDistance = !0, j.backFaceCulling = !1, j.disableLighting = !0, j.reflectionTexture = new BABYLON.CubeTexture("assets/textures/skybox", b), j.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE, g.material = j, highlight = new BABYLON.HighlightLayer("highlight", b); var l = new BABYLON.ArcRotateCamera("ArcRotateCamera", 4.75, 1.3, 15, new BABYLON.Vector3(0, -1, 0), b); l.lowerBetaLimit = 0.1, l.upperBetaLimit = 0.9 * (Math.PI / 2), l.lowerRadiusLimit = 5, l.upperRadiusLimit = 30, l.wheelPrecision = 30, l.pinchPrecision = 30, l.attachControl(canvas, !0), setLights(), setMaterials(); var n = new BABYLON.CannonJSPlugin; b.enablePhysics(void 0, n), b.enablePhysics(); var o = 32, p = 10; ground = BABYLON.Mesh.CreateCylinder("ground", 0.5, p, p, o, 1, b), ground.position.y = -2, groundMaterial.reflectionTexture = new BABYLON.MirrorTexture("mirror", 512, b, !0), groundMaterial.reflectionTexture.mirrorPlane = new BABYLON.Plane(0, -5.75, 0, -10), groundMaterial.reflectionTexture.level = 0.1, groundMaterial.reflectionTexture.renderList = [g], ground.receiveShadows = !0, ground.material = groundMaterial, ground.physicsImpostor = new BABYLON.PhysicsImpostor(ground, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.2 }, b), createSides(o, p), coinParent = createParentCoin(), setUI(), soundDrop = new BABYLON.Sound("CoinDrop", "assets/sounds/drop.wav", b), soundDonation = new BABYLON.Sound("Donation", "assets/sounds/woohoo.wav", b), soundWoosh = new BABYLON.Sound("Woosh", "assets/sounds/woosh.wav", b), soundSD = new BABYLON.Sound("SatoshiDice", "assets/sounds/sd_coin.wav", b), BABYLON.DebugLayer.InspectorURL = "https://cdn.babylonjs.com/inspector/babylon.inspector.bundle.js"; let q = 0; return b.registerBeforeRender(() => { q % 300 || b.meshes.forEach(r => { void 0 != r.physicsImpostor && "ground" != r.name && "sides" != r.name && 0 != r.physicsImpostor.mass && 1e-3 > r.physicsImpostor.physicsBody.velocity.norm() && (r.physicsImpostor.mass = 0) }), 299 == q ? q = 0 : q++ }), BABYLON.SceneOptimizer.OptimizeAsync(b, OptimizerOptions(), null, null), updateStatusText(), b }, OptimizerOptions = function () { var b = new BABYLON.SceneOptimizerOptions(30, 2e3), g = 0; return b.optimizations.push(new BABYLON.ShadowsOptimization(g)), b.optimizations.push(new BABYLON.LensFlaresOptimization(g)), g++ , b.optimizations.push(new BABYLON.PostProcessesOptimization(g)), b.optimizations.push(new BABYLON.ParticlesOptimization(g)), g++ , b.optimizations.push(new BABYLON.TextureOptimization(g, 256)), g++ , b.optimizations.push(new BABYLON.RenderTargetsOptimization(g)), g++ , b.optimizations.push(new BABYLON.HardwareScalingOptimization(g, 4)), b }, scene = createScene(); function updateStatusText() { xhr.open("GET", "https://cashexplorer.bitcoin.com/api/status", !0), xhr.send(), xhr.onreadystatechange = function () { if (4 == this.readyState && 200 == this.status) { let b = JSON.parse(this.responseText); bccStatus.innerHTML = "Network Information<br />", bccStatus.innerHTML += "Block Height: " + b.info.blocks + "<br />", bccStatus.innerHTML += "Difficulty: " + b.info.difficulty } } } function updateTxInfoText(b) { txInfo.innerHTML = "", null == b ? (txInfo.innerHTML = "", document.getElementById("showTransaction").value = "Input Transaction ID to highlight it") : (b.sdTransaction && (txInfo.innerHTML = "<a href='https://satoshidice.com/' target='_blank'>SatoshiDICE</a> Transaction<br />"), txInfo.innerHTML += "<a href='https://cashexplorer.bitcoin.com/tx/" + b.name + "' target='_blank'>View transaction on cashexplorer.bitcoin.com</a>", document.getElementById("showTransaction").value = b.name) } function setLights() { var b = new BABYLON.HemisphericLight("Hemispheric", new BABYLON.Vector3(0, 1, 0), scene); b.diffuse = new BABYLON.Color3(1, 1, 1), b.specular = new BABYLON.Color3(1, 1, 1), b.groundColor = new BABYLON.Color3(0, 0, 0), b.intensity = 1; var g = new BABYLON.DirectionalLight("Directional", new BABYLON.Vector3(0, -2, -1), scene); g.position = new BABYLON.Vector3(0, 5, 5), g.specular = new BABYLON.Color3(1, 1, 1), g.intensity = 0.8, shadows[0] = new BABYLON.ShadowGenerator(1024, g), shadows[0].useBlurExponentialShadowMap = !0, shadows[0].setTransparencyShadows = !0 } function setMaterials() { let b = new BABYLON.Texture("assets/textures/coin.png", scene), g = new BABYLON.Texture("assets/textures/sdlogo.png", scene), j = new BABYLON.Color3(0.298, 0.792, 0.278), l = new BABYLON.Color3(0.2, 0.2, 0.2); groundMaterial = new BABYLON.StandardMaterial("ground", scene), edgeMaterial = new BABYLON.StandardMaterial("edge", scene), sideMaterial = new BABYLON.StandardMaterial("side", scene), coinMaterial = new BABYLON.StandardMaterial("coin", scene), blockMaterial = new BABYLON.StandardMaterial("block", scene), coinDonationMaterial = new BABYLON.StandardMaterial("donation", scene), coinSDMaterial = new BABYLON.StandardMaterial("sdCoin", scene), edgeMaterial.diffuseColor = l, edgeMaterial.specularColor = BABYLON.Color3.Black(), groundMaterial.diffuseColor = l, groundMaterial.emissiveColor = l, groundMaterial.specularColor = l, sideMaterial.emissiveColor = l, sideMaterial.alpha = 0.1, sideMaterial.opacityFresnelParameters = new BABYLON.FresnelParameters, sideMaterial.opacityFresnelParameters.leftColor = BABYLON.Color3.White(), sideMaterial.opacityFresnelParameters.rightColor = BABYLON.Color3.Black(), sideMaterial.hasAlpha = !0, sideMaterial.useSpecularOverAlpha = !0, coinMaterial.diffuseTexture = b, coinMaterial.specularColor = j, coinMaterial.specularPower = 64, coinDonationMaterial.diffuseTexture = b, coinDonationMaterial.diffuseColor = new BABYLON.Color3(1, 1, 0), coinDonationMaterial.specularColor = j, coinDonationMaterial.specularPower = 64, coinSDMaterial.diffuseTexture = g, coinSDMaterial.specularColor = BABYLON.Color3.Black(), coinSDMaterial.specularPower = 64, blockMaterial.diffuseColor = new BABYLON.Color3(1, 0, 0), blockMaterial.specularColor = new BABYLON.Color3(1, 0, 1) } function setUI() { infoPlane = BABYLON.Mesh.CreatePlane("plane", 3), infoPlane.isPickable = !1, infoPlane.position = new BABYLON.Vector3(0, -3, 0), infoPlane.visibility = 0, infoPlane.billboardMode = BABYLON.Mesh.BILLBOARDMODE_ALL, infoTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateForMesh(infoPlane, 1024, 1024, !1), infoRect = new BABYLON.GUI.Rectangle, infoRect.height = 0.1, infoRect.cornerRadius = 20, infoRect.background = "gray", infoRect.alpha = 0.5, infoRect.parent = infoPlane, infoText = new BABYLON.GUI.TextBlock, infoText.fontSize = 100, infoText.alpha = 0.7, infoText.color = "white", infoTexture.addControl(infoRect), infoTexture.addControl(infoText), highlight.addExcludedMesh(infoPlane) } function createSides(b, g) { var n = 1, o = BABYLON.MeshBuilder.CreateCylinder("cone", { height: n, diameter: g, tessellation: b }, scene), p = BABYLON.MeshBuilder.CreateCylinder("cone", { height: n, diameter: g + 0.1, tessellation: b }, scene), q = BABYLON.CSG.FromMesh(o), r = BABYLON.CSG.FromMesh(p), s = r.subtract(q), u = s.toMesh("sides", sideMaterial, scene); u.position.y = -1.25, u.material = sideMaterial, highlight.addExcludedMesh(u); var v = u.clone("edge"); v.material = edgeMaterial, v.scaling.y = 0.5, v.position.y = -2, o.dispose(), p.dispose(), groundMaterial.reflectionTexture.renderList.push(u); for (var A = g / 2, B = [], C = BABYLON.Mesh.CreateBox("side", 0, scene), D = 0; D < b; D++) { var E = Math.PI / 2 + 2 * (D / b) * Math.PI + 1 / b * Math.PI, F = A * Math.cos(E), G = A * Math.sin(E), I = g * Math.sin(Math.PI / b); B[D] = C.clone("sides"), B[D].position = new BABYLON.Vector3(F, -1.5, G), B[D].scaling = new BABYLON.Vector3(0.1, 1.5, I), B[D].rotation.y = -E, B[D].physicsImpostor = new BABYLON.PhysicsImpostor(B[D], BABYLON.PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.1 }, scene), B[D].visibility = 0, B[D].isPickable = !1 } C.dispose() } function initialTransactions(b) { for (var g in b) { var j = b[g].output_total / 1e8, l = b[g].hash; createTransaction(j, l) } } function createParentCoin() { var b = [new BABYLON.Vector4(1, 0, 0, 1), new BABYLON.Vector4(0.2, 0.2, 0.2, 0.2), new BABYLON.Vector4(1, 1, 0, 0)], g = [new BABYLON.Color4(1, 1, 1, 0), new BABYLON.Color4(1, 1, 1, 0), new BABYLON.Color4(1, 1, 1, 0)], l = BABYLON.MeshBuilder.CreateCylinder("coinParent", { height: 0.1, diameter: 1, subdivisions: 1, hasRings: !1, faceUV: b, faceColors: g, tessellation: 16 }, scene); return l.material = coinMaterial, l.position.y = -3, l.rotation.x = 90 * Math.PI / 180, l.receiveShadows = !0, l.enabled = !1, l.visibility = 0, l } let transactions = []; function createTransaction(b, g, j, l) { let n, o, p, q, r, s, u, v; for (var A in transactions.push(g), n = -2 + 4 * Math.random(), p = -2 + 4 * Math.random(), o = 5 + 10 * Math.random(), txRef.checked ? (q = getCoinWidth(!0, l).width, v = getCoinWidth(!0, l).playback) : (q = getCoinWidth(!1, b).width, v = getCoinWidth(!1, b).playback), r = q / 8, s = Math.random() * Math.PI, u = coinParent.clone(g), u.enabled = !0, u.visibility = 1, u.position = new BABYLON.Vector3(n, o, p), u.scaling = new BABYLON.Vector3(q, q, q), u.rotation.y = s, u.physicsImpostor = new BABYLON.PhysicsImpostor(u, BABYLON.PhysicsImpostor.CylinderImpostor, { mass: q, restitution: 0.1 }, scene), u.txValue = b, u.txSize = l, shadows) shadows[A].getShadowMap().renderList.push(u); u.collided = !0; var B = []; scene.meshes.forEach(C => { C.physicsImpostor && B.push(C.physicsImpostor) }), u.physicsImpostor.registerOnPhysicsCollide(B, function (C) { !0 != C.object.collided || soundMute.checked || (soundDrop.setPlaybackRate(v), soundDrop.play(), C.object.collided = !1) }), groundMaterial.reflectionTexture.renderList.push(u), specialTransaction(j, u) } function resetCoinWidths() { transactions.forEach(b => { let g = scene.getMeshByName(b), j = 1; j = txRef.checked ? getCoinWidth(!0, g.txSize).width : getCoinWidth(!1, g.txValue).width, g.scaling = new BABYLON.Vector3(j, j, j), g.physicsImpostor.mass = j }) } function getCoinWidth(b, g) { let j = 1, l = 1; return b ? 300 > g ? (j = 0.2, l = 1) : 300 <= g && 500 > g ? (j = 0.4, l = 0.9) : 500 <= g && 750 > g ? (j = 0.6, l = 0.8) : 750 <= g && 1e3 > g ? (j = 0.8, l = 0.7) : 1e3 <= g && 2e3 > g ? (j = 1, l = 0.6) : 2e3 <= g && 3e3 > g ? (j = 1.2, l = 0.5) : 3e3 <= g && 5e3 > g ? (j = 1.4, l = 0.4) : (j = 1.6, l = 0.3) : 1 > g ? (j = .2, l = 1) : 1 <= g && 10 > g ? (j = .4, l = 0.9) : 10 <= g && 50 > g ? (j = .6, l = 0.8) : 50 <= g && 100 > g ? (j = .8, l = 0.7) : 100 <= g && 200 > g ? (j = 1, l = 0.6) : 200 <= g && 500 > g ? (j = 1.2, l = 0.5) : 500 <= g && 1e3 > g ? (j = 1.4, l = 0.4) : (j = 1.6, l = 0.3), { width: j, playback: l } } function specialTransaction(b, g) { b.forEach(j => { var l = Object.keys(j); l.forEach(n => { "1BEpW8LnYmBpSFpgJkhPM8Ga7Ry99MPUmE" == n ? (g.material = coinDonationMaterial, !soundMute.checked && soundDonation.play()) : !disableSD.checked && ("1DiceoejxZdTrYwu3FMP2Ldew91jq9L2u" == n || "1Dice115YcjDrPM9gXFW8iFV9S3j9MtERm" == n || "1Dice1FZk6Ls5LKhnGMCLq47tg1DFG763e" == n || "1Dice1cF41TGRLoCTbtN33DSdPtTujzUzx" == n || "1Dice1wBBY22stCobuE1LJxHX5FNZ7U97N" == n || "1Dice2wTatMqebSPsbG4gKgT3HfHznsHWi" == n || "1Dice5ycHmxDHUFVkdKGgrwsDDK1mPES3U" == n || "1Dice7JNVnvzyaenNyNcACuNnRVjt7jBrC" == n || "1Dice7v1M3me7dJGtTX6cqPggwGoRADVQJ" == n || "1Dice81SKu2S1nAzRJUbvpr5LiNTzn7MDV" == n || "1Dice9GgmweQWxqdiu683E7bHfpb7MUXGd" == n) && (g.sdTransaction = !0, g.material = coinSDMaterial, soundSD.setVolume(0.2), !soundMute.checked && soundSD.play()) }) }) } function createBlock(b) { var g = BABYLON.Mesh.CreateBox("block", 1, scene); g.material = blockMaterial, g.position.y = 3; var j = new BABYLON.Animation("blockAnimation", "rotation.y", 60, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT), l = []; l.push({ frame: 0, value: 0 }), l.push({ frame: 120, value: 8 }), j.setKeys(l), g.animations = [], g.animations.push(j); var n = scene.beginAnimation(g, 0, 60, !1, 1, !0); soundMute.checked || soundWoosh.play(), BABYLON.Animation.CreateAndStartAnimation("scaleBlockX", g, "scaling.x", 60, 60, g.scaling.x, 4, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT), BABYLON.Animation.CreateAndStartAnimation("scaleBlockY", g, "scaling.y", 60, 60, g.scaling.y, 4, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT), BABYLON.Animation.CreateAndStartAnimation("scaleBlockZ", g, "scaling.z", 60, 60, g.scaling.z, 4, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT), b.forEach(o => { if (scene.getMeshByName(o)) { var p = scene.getMeshByName(o); BABYLON.Animation.CreateAndStartAnimation("moveCoinX", p, "position.x", 60, 60, p.position.x, g.position.x, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT), BABYLON.Animation.CreateAndStartAnimation("moveCoinY", p, "position.y", 60, 60, p.position.y, g.position.y, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT), BABYLON.Animation.CreateAndStartAnimation("moveCoinZ", p, "position.z", 60, 60, p.position.z, g.position.z, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT) } }), n.onAnimationEnd = function () { n.animationStarted = !1, clearTransactions(b), g.dispose() } } function clearTransactions(b) { b.forEach(g => { transactions.forEach((j, l) => { j == g && transactions.splice(l, 1) }), scene.getMeshByName(g) && scene.getMeshByName(g).dispose(!0) }), scene.meshes.forEach(g => { g.physicsImpostor && ("ground" == g.name || "sides" == g.name || g.physicsImpostor.setMass(g.scaling.x)) }) } engine.runRenderLoop(function () { scene.render() }), window.addEventListener("resize", function () { engine.resize() }), window.addEventListener("click", function () { if (event.target == canvas) { var b = scene.pick(scene.pointerX, scene.pointerY), g = b.pickedMesh; if ("ground" != g.name && "sides" != g.name && "edge" != g.name) if ("skyBox" == g.name || g == lastPicked) { if (null == lastPicked) return; highlight.removeMesh(lastPicked), lastPicked = null, infoPlane.visibility = 0, updateTxInfoText(null) } else highlightCoin(g), updateTxInfoText(g) } }); function setCoinColor(b) { b ? (coinMaterial.diffuseTexture = new BABYLON.Texture("assets/textures/coin_orange.png", scene), coinMaterial.specularColor = new BABYLON.Color3(0.9686, 0.5804, 0.1137), bccLogo.src = "assets/images/bccbanner_orange.png") : (coinMaterial.diffuseTexture = new BABYLON.Texture("assets/textures/coin.png", scene), coinMaterial.specularColor = new BABYLON.Color3(0.298, 0.792, 0.278), bccLogo.src = "assets/images/bccbanner.png") } function followTransaction(b) { if (64 == b.length) { let g = !1; scene.meshes.forEach(j => { j.name == b && (highlightCoin(j), g = !0) }), g || (xhr.open("GET", "https://bitcoincash.blockexplorer.com/api/tx/" + b, !0), xhr.send(), xhr.onreadystatechange = function () { if (4 == this.readyState && 200 == this.status) { let j = JSON.parse(this.responseText); 0 == j.confirmations && (createTransaction(j.valueOut, b, j.vout), scene.meshes.forEach(l => { l.name == b && (highlightCoin(l), g = !0) })) } }) } } function highlightCoin(b) { if (null != lastPicked && highlight.removeMesh(lastPicked), infoPlane.position.x = b.position.x, infoPlane.position.z = b.position.z, infoPlane.position.y = -1, infoPlane.visibility = 1, txRef.checked) { var g = b.txSize.toString() + " bytes"; infoText.text = g } else { var j = b.txValue.toString() + " BCH"; infoText.text = j } infoRect.width = infoText.text.length / 17, highlight.addMesh(b, BABYLON.Color3.White()), lastPicked = b } window.onload = function () { "true" == getCookie("mute") && (soundMute.checked = !0), "true" == getCookie("disableSD") && (disableSD.checked = !0), "true" == getCookie("txRef") && (txRef.checked = !0), "true" == getCookie("coinColor") && (coinColor.checked = !0, setCoinColor(coinColor.checked)), window.cookieconsent.initialise({ palette: { popup: { background: "#000", text: "#4cca47" }, button: { background: "#4cca47" } } }) }, coinColor.addEventListener("click", function () { setCoinColor(coinColor.checked), setCookie("coinColor", this.checked) }), soundMute.addEventListener("click", function () { setCookie("mute", this.checked) }), disableSD.addEventListener("click", function () { setCookie("disableSD", this.checked) }), txRef.addEventListener("click", function () { resetCoinWidths(), setCookie("txRef", this.checked) }); function setCookie(b, g, j) { var l = new Date; l.setTime(l.getTime() + 1e3 * (60 * (60 * (24 * j)))); var n = "expires=" + l.toUTCString(); document.cookie = b + "=" + g + ";" + n + ";path=/" } function getCookie(b) { for (var o, g = b + "=", j = decodeURIComponent(document.cookie), l = j.split(";"), n = 0; n < l.length; n++) { for (o = l[n]; " " == o.charAt(0);)o = o.substring(1); if (0 == o.indexOf(g)) return o.substring(g.length, o.length) } return "" } function show(b) { var g = document.getElementById(b); g.style.display = "block" } function hide(b) { var g = document.getElementById(b); g.style.display = "none" } function openTab(b, g) { var j, l, n; for (l = document.getElementsByClassName("tabcontent"), j = 0; j < l.length; j++)l[j].style.display = "none"; for (n = document.getElementsByClassName("tablinks"), j = 0; j < n.length; j++)n[j].className = n[j].className.replace(" active", ""); document.getElementById(g).style.display = "block", b.currentTarget.className += " active" }